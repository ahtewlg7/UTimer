package ahtewlg7.utimer.db.autogen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import ahtewlg7.utimer.db.entity.NoteEntityGdBean;
import ahtewlg7.utimer.db.entity.ActionEntityGdBean;
import ahtewlg7.utimer.db.entity.TaskEntityGdBean;

import ahtewlg7.utimer.db.autogen.NoteEntityGdBeanDao;
import ahtewlg7.utimer.db.autogen.ActionEntityGdBeanDao;
import ahtewlg7.utimer.db.autogen.TaskEntityGdBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig noteEntityGdBeanDaoConfig;
    private final DaoConfig actionEntityGdBeanDaoConfig;
    private final DaoConfig taskEntityGdBeanDaoConfig;

    private final NoteEntityGdBeanDao noteEntityGdBeanDao;
    private final ActionEntityGdBeanDao actionEntityGdBeanDao;
    private final TaskEntityGdBeanDao taskEntityGdBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        noteEntityGdBeanDaoConfig = daoConfigMap.get(NoteEntityGdBeanDao.class).clone();
        noteEntityGdBeanDaoConfig.initIdentityScope(type);

        actionEntityGdBeanDaoConfig = daoConfigMap.get(ActionEntityGdBeanDao.class).clone();
        actionEntityGdBeanDaoConfig.initIdentityScope(type);

        taskEntityGdBeanDaoConfig = daoConfigMap.get(TaskEntityGdBeanDao.class).clone();
        taskEntityGdBeanDaoConfig.initIdentityScope(type);

        noteEntityGdBeanDao = new NoteEntityGdBeanDao(noteEntityGdBeanDaoConfig, this);
        actionEntityGdBeanDao = new ActionEntityGdBeanDao(actionEntityGdBeanDaoConfig, this);
        taskEntityGdBeanDao = new TaskEntityGdBeanDao(taskEntityGdBeanDaoConfig, this);

        registerDao(NoteEntityGdBean.class, noteEntityGdBeanDao);
        registerDao(ActionEntityGdBean.class, actionEntityGdBeanDao);
        registerDao(TaskEntityGdBean.class, taskEntityGdBeanDao);
    }
    
    public void clear() {
        noteEntityGdBeanDaoConfig.clearIdentityScope();
        actionEntityGdBeanDaoConfig.clearIdentityScope();
        taskEntityGdBeanDaoConfig.clearIdentityScope();
    }

    public NoteEntityGdBeanDao getNoteEntityGdBeanDao() {
        return noteEntityGdBeanDao;
    }

    public ActionEntityGdBeanDao getActionEntityGdBeanDao() {
        return actionEntityGdBeanDao;
    }

    public TaskEntityGdBeanDao getTaskEntityGdBeanDao() {
        return taskEntityGdBeanDao;
    }

}
